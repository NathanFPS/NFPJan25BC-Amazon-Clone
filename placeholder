 <div>
        <h1>Products Page</h1>
        <ul>
          <li><Link to='/products-details/1'>Product 1</Link></li>
          <li><Link to='/products-details/2'>Product 2</Link></li>
          <li><Link to='/products-details/3'>Product 3</Link></li>
          <li><Link to='/products-details/4'>Product 4</Link></li>
        </ul>
</div> 


      .product-rows {
        display: flex;
        z-index: 1;
        margin-left: 5px;
        margin-right: 5px;
    }


   import React from 'react';  Old Login
    import ReactDOM from 'react-dom';
    import { Route } from 'react-router-dom';
    import Modal from './Modal';
    
    const Login = () => {
      const [isOpen, setIsOpen] = React.useState(false);
      return (
        <div className="login">
          <h1>Log Up Page</h1>
          <p>This is our login page</p>
          <button onClick={() => setIsOpen(true)}>Open Modal</button>
          {isOpen && ReactDOM.createPortal(<Modal setIsOpen={setIsOpen} />,
            document.getElementById('modal-root-div')
          )}
        </div>
      );
    }
    
    
    
    export default Login;

const Login = () => {
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const emailRef = useRef();
  const passwordRef = useRef();

  useEffect(() => {
    const user = localStorage.getItem("isLoggedIn");

    if (user) {
      setIsLoggedIn(true);
    }

  }, []);

  const signIn = (e) => {
    e.preventDefault();
    const enteredEmail = emailRef.current.value;
    const enteredPassword = passwordRef.current.value;
    console.log("Email: ", enteredEmail + "Password: ", enteredPassword);
    localStorage.setItem("isLoggedIn", "1");
    setIsLoggedIn(true);
  }

  const signOut = () => {
    setIsLoggedIn(false);
    localStorage.removeItem("isLoggedIn");
  }

  return (
    <div className="login">
      {isLoggedIn && (
        <p>
          You are logged in. <button onClick={signOut}>Sign out</button>
        </p>
      )}
      <p>You are logged in <button onClick={signOut}>Sign out</button></p>
      <Link to="/">
        <img className="login-logo"
        src="http://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png" alt="" />
      </Link>
      <div className="login-container">
        <h1>Sign In</h1>
        <form>
          <h5>Email</h5>
          <input type="text" ref={emailRef} />
          <h5>Password</h5>
          <input type="password" ref={passwordRef}/>
          <button type="submit" className="login-signInButton">Sign In</button>
        </form>
        <p>
          By signing-in you agree to the AMAZON FAKE CLONE Conditions of Use & Sale. Please see our Privacy Notice, our Cookies Notice and our Interest-Based Ads Notice.
        </p>
        <button className="login-registerButton">Create your Amazon Account</button>
      </div>
    </div>
  );
}


import React, {useState, useRef, useReducer, useEffect, useContext} from 'react';
import ReactDOM from 'react-dom';
import { Link, Route } from 'react-router-dom';
import Modal from './Modal';
import './styles/Login.css';
import AuthContext from '../context/authContext';
import ShoppingContext from '../context/shopping/shoppingContext';

const reducer = (state, action) => {
  
  if(action.type === 'EMAIL_INPUT') {
    return {...state, emailValue: action.payload};
  }
  if(action.type === 'PASSWORD_INPUT') {
    return {...state, passwordValue: state.passwordValue};
  }
  return {emailValue: "", passwordValue: ""};
}

const Login = () => {
  const shoppingContext = useContext(ShoppingContext);
  const {basket} = shoppingContext;
  const ctx = useContext(AuthContext);
  const [formIsValid, setFormIsValid] = useState(false);
  const [state, dispatch] = useReducer(reducer, {
    emailValue: "", 
    passwordValue: ""
  });
  const {emailValue: email, passwordValue: password} = state;

  useEffect(() => {
    const identifier = setTimeout(() => {
      console.log("Checking form validity!");
      setFormIsValid(email.includes('@') && state.password.trim().length > 6);
    }, 500);
    return () => {
      console.log("CLEANUP");
      clearTimeout(identifier);
    }
  }, [email, password]);

  const emailChangeHandler = (e) => {
    dispatch({type: 'EMAIL_INPUT', payload: e.target.value});
  }

  const passwordChangeHandler = (e) => {
    dispatch({type: 'PASSWORD_INPUT', payload: e.target.value});
  }

  const signIn = (e) => {
    e.preventDefault();
    console.log("Entered Email: ", state.emailValue);
    console.log("Entered Password: ", state.passwordValue);
    ctx.onLogin(state.emailValue, state.passwordValue);
  }

  return (
    <div className="login">
      <Link to="/">
        <img className="login-logo"
        src="http://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png" alt="" />
      </Link>
      <div className="login-container">
        <h1>Sign In</h1>
        <form>
          <h5>Email</h5>
          <input type="text" 
            value={state.emailValue}
            onChange={emailChangeHandler}
          />
          <h5>Password</h5>
          <input type="password" 
            value={state.passwordValue}
            onChange={passwordChangeHandler}
          />
          <button type="submit" className="login-signInButton">Sign In</button>
        </form>
        <p>
          By signing-in you agree to the AMAZON FAKE CLONE Conditions of Use & Sale. Please see our Privacy Notice, our Cookies Notice and our Interest-Based Ads Notice.
        </p>
        <button className="login-registerButton">Create your Amazon Account</button>
      </div>
    </div>
  );
}



export default Login;